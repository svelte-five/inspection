{"version":3,"file":"index.js","sources":["../src/base.ts","../src/transporting/transporter.ts","../src/transporting/base.ts","../src/transporting/transports/console.ts","../src/methods/debug.ts","../src/methods/info.ts","../src/methods/warn.ts","../src/methods/error.ts","../src/index.ts"],"sourcesContent":["/// <reference types=\"vite/client\" />\n\nimport { DEV } from 'solid-js'\nimport { isServer } from 'solid-js/web'\n\nexport type SolidInspectionLevel = 'debug' | 'info' | 'warn' | 'error'\nexport type SolidInspectionInput = {\n    msg: string,\n    [prop: string]: string | number | boolean | Error\n} | string | Error\nexport type SolidInspectionTransport = {\n    msg: string\n    level: SolidInspectionLevel\n    timestamp: string\n    [prop: string]: string | number | boolean | Error\n}\n\ninterface ImportMetaEnv {\n    readonly VITE_SOLID_INSPECTION: string\n}\ninterface ImportMeta {\n    readonly env: ImportMetaEnv\n}\n\nexport const isActive = (DEV && !isServer) || import.meta.env['VITE_SOLID_INSPECTION']\n\nexport function empty(msg: SolidInspectionInput) {\n    return;\n}\n","import {\n    SolidInspectionInput, SolidInspectionLevel, SolidInspectionTransport\n} from '../base'\nimport { TransporterBase } from './base'\n\nclass Transporter {\n    private transports: TransporterBase[] = []\n\n    format(input: SolidInspectionInput, level: SolidInspectionLevel): SolidInspectionTransport {\n        return Object.assign({},\n            typeof input === 'string'\n                ? { msg: input, level }\n                : input instanceof Error\n                    ? { msg: input.message, level, err: input }\n                    : input,\n            { timestamp: new Date().toISOString(), level }\n        )\n    }\n\n    handle(input: SolidInspectionInput, level: SolidInspectionLevel) {\n        const obj = this.format(input, level)\n        this.transports.map((t) => t.out(obj))\n    }\n\n    add(obj: TransporterBase) {\n        if (this.transports.some((t) => t.name === obj.name)) {\n            return\n        }\n        this.transports.push(obj)\n    }\n}\n\nexport const transporter = new Transporter()","import { SolidInspectionTransport } from '../base'\n\nexport class TransporterBase {\n    name = 'base'\n    levelColorMap = {\n        'debug': 'gray',\n        'info': 'light-dark(blue, deepskyblue);',\n        'warn': 'orange',\n        'error': 'red'\n    }\n    out(obj: SolidInspectionTransport) {}\n}\n","import { SolidInspectionTransport } from '../../base'\nimport { TransporterBase } from '../base'\n\nclass TransporterConsole extends TransporterBase {\n    name = 'console'\n\n    out(obj: SolidInspectionTransport) {\n        const message = obj.msg\n        const { msg, level, timestamp, ...rest } = obj\n\n        console.log.apply(console, [\n            '%c' + obj.timestamp + ' %c[' + obj.level.toUpperCase() + ']:',\n            'color:gray;',\n            'color:' + this.levelColorMap[obj.level] + ';',\n            message,\n            ...Object.values(rest)\n        ])\n    }\n}\n\nexport const tconsole = new TransporterConsole()\n","import { type SolidInspectionInput } from '../base'\nimport { transporter } from '../transporting/transporter'\nimport { tconsole } from '../transporting/transports/console'\n\ntransporter.add(tconsole)\n\nexport default function debug (msg: SolidInspectionInput) {\n    transporter.handle(msg, 'debug')\n}\n","import { type SolidInspectionInput } from '../base'\nimport { transporter } from '../transporting/transporter'\nimport { tconsole } from '../transporting/transports/console'\n\ntransporter.add(tconsole)\n\nexport default function info (msg: SolidInspectionInput) {\n    transporter.handle(msg, 'info')\n}\n","import { type SolidInspectionInput } from '../base'\nimport { transporter } from '../transporting/transporter'\nimport { tconsole } from '../transporting/transports/console'\n\ntransporter.add(tconsole)\n\nexport default function warn (msg: SolidInspectionInput) {\n    transporter.handle(msg, 'warn')\n}\n","import { type SolidInspectionInput } from '../base'\nimport { transporter } from '../transporting/transporter'\nimport { tconsole } from '../transporting/transports/console'\n\ntransporter.add(tconsole)\n\nexport default function error (msg: SolidInspectionInput) {\n    transporter.handle(msg, 'error')\n}\n","import { isActive, empty, type SolidInspectionInput } from './base'\nimport { default as _debug } from './methods/debug'\nimport { default as _info } from './methods/info'\nimport { default as _warn } from './methods/warn'\nimport { default as _error } from './methods/error'\n\n/*@__NO_SIDE_EFFECTS__*/\nexport function info(msg: SolidInspectionInput) {\n    return isActive ? _info(msg) : empty(msg)\n}\n/*@__NO_SIDE_EFFECTS__*/\nexport function debug(msg: SolidInspectionInput) {\n    return isActive ? _debug(msg) : empty(msg)\n}\n/*@__NO_SIDE_EFFECTS__*/\nexport function warn(msg: SolidInspectionInput) {\n    return isActive ? _warn(msg) : empty(msg)\n}\n/*@__NO_SIDE_EFFECTS__*/\nexport function error(msg: SolidInspectionInput) {\n    return isActive ? _error(msg) : empty(msg)\n}\n"],"names":["isActive","DEV","isServer","import","meta","env","empty","msg","Transporter","transports","format","input","level","Object","assign","Error","message","err","timestamp","Date","toISOString","handle","obj","map","t","out","add","some","name","push","transporter","TransporterBase","levelColorMap","TransporterConsole","rest","console","log","apply","toUpperCase","values","tconsole","debug","info","warn","error","_info","_debug","_warn","_error"],"mappings":"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"}